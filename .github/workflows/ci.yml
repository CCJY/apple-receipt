name: Nuget Package Deploy

on:
  push:
    branches:
      - master
      - feature/netcore
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 'true'
    steps:
      - uses: actions/checkout@v2
      - name: Setup .Net Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet.version: '3.1.x'
      - name: Restore with .Net Core
        run: dotnet restore
      - name: Build with .Net Core
        run: dotnet build --no-restore --configuration Release
      - name: Test with .Net Core
        run: dotnet test --no-build --nologo --configuration Release
  publish:
    needs: build
    runs-on: ubuntu-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 'true'
    # if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - name: Fetch all history for all tags and branches
        run: git fetch --prune --unshallow
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.4
        with:
          versionSpec: '5.3.x'
      - name: Use GitVersion
        id: gitversion # step id used as reference for output values
        uses: gittools/actions/gitversion/execute@v0.9.4
      - run: |
          echo "NuGetVersionV2: ${{ steps.gitversion.outputs.nuGetVersionV2 }}"
          echo "NuGetPreReleaseTagV2: ${{ steps.gitversion.outputs.CommitsSinceVersionSourcePadded }}"
      - name: Pack with .Net Core
        run: dotnet pack --configuration Release --output nuget-packages -p:PackageVersion=${{ steps.gitversion.outputs.nuGetVersionV2 }}-${{ steps.gitversion.outputs.CommitsSinceVersionSourcePadded }}
      - uses: actions/upload-artifact@v2
        with:
          name: Nuget-packages
          path: nuget-packages
      - name: Push package to nuget
        run: dotnet nuget push nuget-packages/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
